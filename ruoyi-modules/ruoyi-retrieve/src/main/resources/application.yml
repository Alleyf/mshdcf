# Tomcat
server:
  port: 9208

# Spring
spring:
  application:
    # 应用名称
    name: ruoyi-retrieve
  profiles:
    # 环境配置
    active: @profiles.active@

--- # nacos 配置
spring:
  cloud:
    nacos:
      # nacos 服务地址
      server-addr: @nacos.server@
      discovery:
        # 注册组
        group: @nacos.discovery.group@
        namespace: ${spring.profiles.active}
      config:
        # 配置组
        group: @nacos.config.group@
        namespace: ${spring.profiles.active}
    stream:
      function:
        # 重点配置 与 binding 名与消费者对应
        definition: delay;worldCloud;
  config:
    import:
      - optional:nacos:application-common.yml
      - optional:nacos:datasource.yml
      - optional:nacos:${spring.application.name}.yml



--- # rabbitmq 配置
spring:
  rabbitmq:
    host: localhost
    port: 5672
    virtual-host: /retrieve
    username: admin
    password: admin
  cloud:
    stream:
      rabbit:
        bindings:
          #          延迟交换机需要安装delayed-message插件
          delay-in-0:
            consumer:
              delayedExchange: true
          delay-out-0:
            producer:
              delayedExchange: true
          worldCloud-in-0:
            consumer:
              delayedExchange: true
          worldCloud-out-0:
            producer:
              delayedExchange: true
      bindings:
        #        最好将不同交换机和队列的destination和group分开，否则会混乱
        delay-in-0:
          destination: delay.exchange.cloud
          content-type: application/json
          group: delay-group
          binder: rabbit
        delay-out-0:
          destination: delay.exchange.cloud
          content-type: application/json
          group: delay-group
          binder: rabbit
        worldCloud-in-0:
          destination: worldCloud.exchange.cloud
          content-type: application/json
          group: worldCloud-group
          binder: rabbit
        worldCloud-out-0:
          destination: worldCloud.exchange.cloud
          content-type: application/json
          group: worldCloud-group
          binder: rabbit


--- # elasticsearch 功能配置
# 文档地址: https://www.easy-es.cn/
# 更改包名需要去 EasyEsConfiguration 修改包扫描(后续版本支持配置文件读取)
easy-es:
  # 是否开启EE自动配置
  enable: true
  # es连接地址+端口 格式必须为ip:port,如果是集群则可用逗号隔开
  address: 8.130.88.159:9200
  # 默认为http
  schema: http
  banner: false
  # 注意ES建议使用账号认证 不使用会报警告日志
  #如果无账号密码则可不配置此行
  username: elastic
  #如果无账号密码则可不配置此行
  password: alleyfelasticsearch
  # 心跳策略时间 单位:ms
  keep-alive-millis: 18000
  # 连接超时时间 单位:ms
  connectTimeout: 5000
  # 通信超时时间 单位:ms
  socketTimeout: 5000
  # 请求超时时间 单位:ms
  requestTimeout: 5000
  # 连接请求超时时间 单位:ms
  connectionRequestTimeout: 5000
  # 最大连接数 单位:个
  maxConnTotal: 100
  # 最大连接路由数 单位:个
  maxConnPerRoute: 100
  global-config:
    # 开启控制台打印通过本框架生成的DSL语句,默认为开启,测试稳定后的生产环境建议关闭,以提升少量性能
    print-dsl: true
    # 异步处理索引是否阻塞主线程 默认阻塞 数据量过大时调整为非阻塞异步进行 项目启动更快
    asyncProcessIndexBlocking: false
    # 分布式环境下,平滑模式,当前客户端激活最新索引最大重试次数,若数据量过大,重建索引数据迁移时间超过4320/60=72H,可调大此参数值,此参数值决定最大重试次数,超出此次数后仍未成功,则终止重试并记录异常日志
    active-release-index-max-retry: 4320
    # 分布式环境下,平滑模式,当前客户端激活最新索引最大重试次数 分布式环境下,平滑模式,当前客户端激活最新索引重试时间间隔 若您期望最终一致性的时效性更高,可调小此值,但会牺牲一些性能
    active-release-index-fixed-delay: 60
    #smoothly:平滑模式, not_smoothly:非平滑模式, manual:手动模式
    process_index_mode: not_smoothly
    db-config:
      # 是否开启下划线转驼峰 默认为false
      map-underscore-to-camel-case: true
      # id生成策略 customize为自定义,id值由用户生成,比如取MySQL中的数据id,如缺省此项配置,则id默认策略为es自动生成
      id-type: customize
      # 字段更新策略 默认为not_null
      field-strategy: not_null
      # 默认开启,查询若指定了size超过1w条时也会自动开启,开启后查询所有匹配数据,若不开启,会导致无法获取数据总条数,其它功能不受影响.
      enable-track-total-hits: true
      # 数据刷新策略,默认为不刷新
      refresh-policy: immediate
      # 是否自动添加keyword后缀 默认为true
      smartAddKeywordSuffix: true
